{
  "comments": [
    {
      "key": {
        "uuid": "1c5f1012_4a31a9a7",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-08T00:28:27Z",
      "side": 1,
      "message": "As 32bit platform is a case now. We can just remove the second condition. tjbench32 should always exists on both 32bit and 64bit platforms?",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effdeba1_3fb7b5ce",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2017-11-08T04:34:35Z",
      "side": 1,
      "message": "No, there might be the case that there will be only tj64 there.",
      "parentUuid": "1c5f1012_4a31a9a7",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1bd690a_7d0c678a",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-08T06:10:52Z",
      "side": 1,
      "message": "In which case?\n\nI am assuming\n1) armv8 has both tj32 and tj64. The build itself should try to be consistent. Otherwise, you wouldn\u0027t get consistent test result cross builds.\n2) armv7 only has tj32",
      "parentUuid": "effdeba1_3fb7b5ce",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd279bbf_68263269",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2017-11-10T06:24:57Z",
      "side": 1,
      "message": "One build is consistent, but different builds could have different commands integrated.\nAt the moment, there is no case that only have tjbench64, but that\u0027s possible to only have tj64 command on a 64it platform.\n\nIt\u0027s better to have one test implementation across all builds.",
      "parentUuid": "d1bd690a_7d0c678a",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "649deb2b_0addb7b5",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-10T06:52:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd279bbf_68263269",
      "range": {
        "startLine": 51,
        "startChar": 30,
        "endLine": 51,
        "endChar": 61
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73544b86_452f1506",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-08T00:28:27Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 53,
        "startChar": 28,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "389819cc_256a3e78",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-10T06:52:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73544b86_452f1506",
      "range": {
        "startLine": 53,
        "startChar": 28,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e38e02_03d63585",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-08T00:28:27Z",
      "side": 1,
      "message": "With just a \u0027continue\u0027 sentence, this block will do nothing.\n\nSome thoughts.\n\n1) If you only want to make sure 32bit binary always exist, try:\nif [ \"${test}\" \u003d \"${cmd_name}32\"  ] \u0026\u0026 ! adb_shell_which \"${test}\"; then\n        report_fail \"check-${test}-existence\"\n        exit 0\nfi\n\n2) I guess it is possible to detect what platform we are testing(32 or 64 bit), then decide which binary should exist.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 69,
        "endChar": 10
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfeb109c_c5d57567",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2017-11-08T04:34:35Z",
      "side": 1,
      "message": "What we should do is to run the existing test, no need to report failure when the test command does not exist.",
      "parentUuid": "b2e38e02_03d63585",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 69,
        "endChar": 10
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c672f7dc_7f04fbac",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-08T06:10:52Z",
      "side": 1,
      "message": "If the number of tests isn\u0027t predictable, maybe, at the first place, trying to cover both 32bit and 64bit in the same test run is a bad idea.\n\nWhat if both 32bit and 64bit binaries not exist? when that happen, we get empty results. In this test case, line #51 will make sure at least one of them exist, otherwise report depends issue. If you want to go for this way, please do the same check for libc-bench and stringbench.",
      "parentUuid": "bfeb109c_c5d57567",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 69,
        "endChar": 10
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceaa913d_d959d5f8",
        "filename": "automated/android/tjbench/tjbench.sh",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1000096
      },
      "writtenOn": "2017-11-10T06:52:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c672f7dc_7f04fbac",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 69,
        "endChar": 10
      },
      "revId": "231a414e0ef9ccd87c0d28d1178c7466f0f3896e",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}